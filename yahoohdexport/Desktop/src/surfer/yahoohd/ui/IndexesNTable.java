package surfer.yahoohd.ui;

import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.CellConstraints;

import javax.swing.*;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;
import java.awt.*;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.util.Map;
import java.util.HashMap;

import surfer.yahoohd.desktop.IndexesListModel;
import surfer.yahoohd.core.MainPanel;

/**
 * created on: 2007-10-18 by tzvetan
 */
public class IndexesNTable implements MainPanel {
    private JPanel panel1;
    private JList indexesList;
    private JButton addButton;
    private JButton removeButton;
    private JTextField textField;
    private JTable table1;
    private JButton showSymbolButton;
    private JProgressBar progressBar;

    IndexesListModel listModel;
    int selectedIndex = -1;
    volatile Map<String, JTable> tables;
    JTable table;

    public IndexesNTable() {

        listModel = new IndexesListModel();
        indexesList.setModel(listModel);

        // Clear list selection on type in text field
        textField.addKeyListener(new KeyListener() {
            public void keyTyped(KeyEvent e) {
                indexesList.clearSelection();
                indexesList.updateUI();
                selectedIndex = -1;
            }

            public void keyPressed(KeyEvent e) {
            }

            public void keyReleased(KeyEvent e) {
            }
        });

        // Add text field value to indexes list
        addButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String index = textField.getText();
                if (!index.isEmpty()) {
                    listModel.add(index);
                    indexesList.updateUI();
                    textField.setText("");
                }
            }
        });


        indexesList.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting()) {
                    selectedIndex = indexesList.getSelectedIndex();
                    textField.setText((String) indexesList.getSelectedValue());
                }
            }
        });

        // Remove index from list
        removeButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                if (selectedIndex > -1) {
                    listModel.remove(selectedIndex);
                    textField.setText("");
                    indexesList.updateUI();
                    selectedIndex = -1;
                } else {
                    listModel.remove(textField.getText());
                    textField.setText("");
                    indexesList.updateUI();
                    selectedIndex = -1;
                }
            }
        });

        showSymbolButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                String index = (String) listModel.getElementAt(indexesList.getSelectedIndex());
                JTable viewTable;
//                if ((viewTable = tables.get(index)) == null) {
//                    viewTable = new JTable();
//                    tables.put(index, viewTable);
//                }
//                table = viewTable;
//                table.updateUI();
            }
        });

        tables = new HashMap<String, JTable>();
        table = new JTable();


    }

    public ListModel getSelectedIndexes() {
        return listModel;
    }

    public Map<String, JTable> getTables() {
        return tables;
    }

    public JPanel getPanel() {
        return panel1;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:d:noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:6dlu:noGrow,left:282px:grow,left:11px:noGrow,right:max(d;4px):noGrow,left:6dlu:noGrow", "bottom:d:noGrow,bottom:d:noGrow,fill:d:noGrow"));
        final JScrollPane scrollPane1 = new JScrollPane();
        CellConstraints cc = new CellConstraints();
        panel1.add(scrollPane1, cc.xyw(1, 1, 3, CellConstraints.FILL, CellConstraints.FILL));
        indexesList = new JList();
        indexesList.setBackground(new Color(-3342388));
        indexesList.setSelectionMode(0);
        scrollPane1.setViewportView(indexesList);
        addButton = new JButton();
        addButton.setText("Add");
        addButton.setMnemonic('A');
        addButton.setDisplayedMnemonicIndex(0);
        panel1.add(addButton, cc.xy(1, 3));
        removeButton = new JButton();
        removeButton.setText("Remove");
        removeButton.setMnemonic('R');
        removeButton.setDisplayedMnemonicIndex(0);
        panel1.add(removeButton, cc.xy(3, 3));
        textField = new JTextField();
        panel1.add(textField, cc.xyw(1, 2, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JScrollPane scrollPane2 = new JScrollPane();
        scrollPane2.setEnabled(false);
        panel1.add(scrollPane2, cc.xyw(5, 1, 4, CellConstraints.FILL, CellConstraints.FILL));
        table1 = new JTable();
        scrollPane2.setViewportView(table1);
        showSymbolButton = new JButton();
        showSymbolButton.setText("Show Symbol");
        showSymbolButton.setMnemonic('S');
        showSymbolButton.setDisplayedMnemonicIndex(0);
        panel1.add(showSymbolButton, cc.xy(5, 3, CellConstraints.LEFT, CellConstraints.DEFAULT));
        progressBar = new JProgressBar();
        progressBar.setStringPainted(false);
        progressBar.setValue(20);
        panel1.add(progressBar, cc.xyw(5, 2, 4, CellConstraints.FILL, CellConstraints.CENTER));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
